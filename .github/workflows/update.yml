name: Update
on:
  schedule:
    - cron: 0 18 * * *
  workflow_dispatch:

jobs:
  update-flake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Install nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            extra-substituters = https://cache.garnix.io
            extra-trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=

      - name: Check flake inputs
        id: check
        run: |
          declare -A inputs=(
            ["nixpkgs"]="github:NixOS/nixpkgs/nixos-unstable"
            ["rx-nvim"]="github:CnTeng/rx-nvim"
            ["todoist-cli"]="github:CnTeng/todoist-cli"
            ["ph"]="github:CnTeng/ph"
          )

          check_flake_input() {
            local flake_name=$1
            local flake_url=$2

            local current_rev
            local latest_rev

            current_rev=$(nix flake metadata --json | jq -r ".locks.nodes[\"${flake_name}\"].locked.rev")
            latest_rev=$(nix flake metadata "${flake_url}" --json | jq -r '.revision')

            if [[ "$current_rev" != "$latest_rev" ]]; then
              echo "${flake_name}:"
              echo "  current: $current_rev"
              echo "  latest: $latest_rev"
              return 1
            else
              return 0
            fi
          }

          upgrade=false
          for flake_name in "${!inputs[@]}"; do
            flake_url=${inputs[$flake_name]}
            if check_flake_input "$flake_name" "$flake_url"; then
              upgrade=true
            fi
          done

          echo "upgrade=$upgrade" >>"$GITHUB_OUTPUT"

      - name: Update flake inputs
        uses: DeterminateSystems/update-flake-lock@main
        if: steps.check.outputs.upgrade == 'true'
        with:
          commit-msg: "bump: flake inputs"
          branch: bump_flake_inputs
          pr-title: "bump: flake inputs"
          pr-body: |
            Automated changes by GitHub Action.

            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-labels: merge-queue
